<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>


// Channels
broadcast chan callUp, callDown, requestMove, stopMove, arrivedFloor;


 // Track if passenger calls
bool callPlacedUp = false;
bool callPlacedDown = false;
bool reachedDestination = false;

 // Invariants to ensure floor is always within [-1..3]
const int MIN_FLOOR = -1;
const int MAX_FLOOR = 3;
 
// Global clocks
clock globalClock;</declaration>
	<template>
		<name>Elevator</name>
		<declaration>
      // Local states to handle movement and idle
      bool moving = false;
          
      int c_floor = 0;</declaration>
		<location id="id0" x="145" y="162">
			<name x="136" y="128">Idle</name>
		</location>
		<location id="id1" x="553" y="162">
			<name x="587" y="153">Moving</name>
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="315" y="170">requestMove?</label>
			<label kind="assignment" x="306" y="187">moving = true</label>
		</transition>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="230" y="85">stopMove?</label>
			<label kind="assignment" x="204" y="68">moving = false</label>
			<nail x="374" y="94"/>
		</transition>
		<transition id="id4">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="349" y="34">moving&amp;&amp;(c_floor&lt; MAX_FLOOR)</label>
			<label kind="synchronisation" x="417" y="60">arrivedFloor!</label>
			<label kind="assignment" x="383" y="9">c_floor += 1</label>
			<nail x="519" y="77"/>
			<nail x="476" y="94"/>
		</transition>
		<transition id="id5">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="578" y="85">moving&amp;&amp;(c_floor&gt;MIN_FLOOR)</label>
			<label kind="synchronisation" x="587" y="60">arrivedFloor!</label>
			<label kind="assignment" x="638" y="111">c_floor-=1</label>
			<nail x="587" y="111"/>
			<nail x="629" y="136"/>
		</transition>
	</template>
	<template>
		<name>Dispatcher</name>
		<declaration>
      // Dispatcher listens for calls and requests elevator movement
    </declaration>
		<location id="id6" x="42" y="93">
			<name x="68" y="85">Monitor</name>
		</location>
		<init ref="id6"/>
		<transition id="id7">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-144" y="93">callPlacedUp</label>
			<label kind="synchronisation" x="-161" y="51">requestMove!</label>
			<label kind="assignment" x="-221" y="68">callPlacedUp = false</label>
			<nail x="-17" y="68"/>
			<nail x="-25" y="102"/>
		</transition>
		<transition id="id8">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-51" y="-59">callPlacedDown</label>
			<label kind="synchronisation" x="-34" y="-93">requestMove!</label>
			<label kind="assignment" x="-93" y="-76">callPlacedDown = false</label>
			<nail x="0" y="-25"/>
			<nail x="59" y="-34"/>
		</transition>
		<transition id="id9">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-42" y="153">reachedDestination</label>
			<label kind="synchronisation" x="0" y="170">stopMove!</label>
			<nail x="8" y="136"/>
			<nail x="68" y="136"/>
		</transition>
	</template>
	<template>
		<name>Passenger</name>
		<declaration>
      // Passenger can place up or down calls, then watch for arrival
    </declaration>
		<location id="id10" x="-93" y="68">
			<name x="-103" y="38">Waiting</name>
		</location>
		<location id="id11" x="190" y="80">
			<name x="180" y="50">Riding</name>
		</location>
		<location id="id12" x="190" y="230">
			<name x="180" y="200">Arrived</name>
		</location>
		<init ref="id10"/>
		<transition id="id13">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="34" y="51">callUp!</label>
			<label kind="assignment" x="-25" y="85">callPlacedUp = true</label>
		</transition>
		<transition id="id14">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="0" y="-17">callDown!</label>
			<label kind="assignment" x="-51" y="-34">callPlacedDown = true</label>
			<nail x="93" y="8"/>
		</transition>
		<transition id="id15">
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="130" y="140">arrivedFloor?</label>
			<label kind="assignment" x="130" y="155">reachedDestination = true</label>
			<nail x="195" y="195"/>
		</transition>
	</template>
	<system>
    // Instantiate processes
    El1 = Elevator();
    El2 = Elevator();
    D = Dispatcher();
    P1 = Passenger();
    P2 = Passenger();
    P3 = Passenger();

    // Compose the system
    system El1, El2, D, P1, P2, P3;
  </system>
	<queries>
		<query>
			<formula>A&lt;&gt; (callPlacedUp || callPlacedDown) imply ((P1.Riding == true) and (P2.Riding == true) and (P3.Riding == true))</formula>
			<comment>every call is eventually serviced</comment>
			<result outcome="success" type="quality" timestamp="2025-04-04 12:34:59 +0800">
			</result>
		</query>
		<query>
			<formula>A[] (El1.c_floor &gt;= MIN_FLOOR &amp;&amp; El1.c_floor &lt;= MAX_FLOOR) and (El2.c_floor &gt;= MIN_FLOOR &amp;&amp; El2.c_floor &lt;= MAX_FLOOR)</formula>
			<comment>Elevator always goes within floor -1 to 3</comment>
			<result outcome="success" type="quality" timestamp="2025-04-04 12:34:50 +0800">
			</result>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2025-05-28 10:32:58 +0800">
			</result>
		</query>
		<query>
			<formula>A&lt;&gt; (callPlacedUp || callPlacedDown) imply ((P1.Arrived) and (P2.Arrived) and (P3.Arrived))</formula>
			<comment>passenger eventually reaches the floor</comment>
			<result outcome="success" type="quality" timestamp="2025-04-04 12:34:57 +0800">
			</result>
		</query>
	</queries>
</nta>
